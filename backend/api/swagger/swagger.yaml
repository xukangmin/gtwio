swagger: "2.0"
info:
  version: "0.0.1"
  title: GTW IOT API
# during dev, should point to your local machine
host: localhost:8002
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

tags:
- name: status
  description: Status about the system
- name: asset
  description: Get Asset Info
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: data
  description: retrieve data from database
- name: device
  description: device info
- name: parameter
  description: parameter info
- name: dashboard
  description: dashboard info
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
- name: deploy
  description: github webhooks

#securityDefinitions:
 # UserSecurity:
 #   type: apiKey
  #  in: header
  #  name: x-api-key

#security:
 # - UserSecurity: []

paths:
  /status/getCurrentStatus:
    x-swagger-router-controller: statusManage
    get:
      tags:
      - status
      summary: Retrieve status 
      description: Return status
      # used as the method name of the controller
      operationId: getCurrentStatus
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/AssetModel"
              Count:
                type: integer
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getAssetByUser:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      summary: Retrieve list of assets
      description: Return list of assets by user id
      # used as the method name of the controller
      operationId: getAssetByUser
      parameters:
        - name: userID
          in: query
          description: input user ID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/AssetModel"
              Count:
                type: integer
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getSingleAsset:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return list of asset's attributes for a given AssetID
      # used as the method name of the controller
      operationId: getSingleAsset
      parameters:
        - name: AssetID
          in: query
          description: AssetID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AssetModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getAssetTimeRange:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return list of timerange
      # used as the method name of the controller
      operationId: getAssetTimeRange
      parameters:
        - name: AssetID
          in: query
          description: AssetID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AssetModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getBaselineByAssetID:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return list of asset's attributes for a given AssetID
      # used as the method name of the controller
      operationId: getBaselineByAssetID
      parameters:
        - name: AssetID
          in: query
          description: AssetID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BaselineModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/addBaselineByAssetID:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: add baseline to addset
      # used as the method name of the controller
      operationId: addBaselineByAssetID
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/BaselineModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/updateBaseline:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: updateBaseline baseline to addset
      # used as the method name of the controller
      operationId: updateBaseline
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/BaselineModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/deleteBaselineByAssetID:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    delete:
      tags:
      - asset
      description: delete baseline to asset
      # used as the method name of the controller
      operationId: deleteBaselineByAssetID
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/BaselineModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/deleteAllEquationWithInterval:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    delete:
      tags:
      - asset
      description: delete baseline to asset
      # used as the method name of the controller
      operationId: deleteAllEquationWithInterval
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/BaselineModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getAllTimeInterval:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return list of timer interval by assetid
      # used as the method name of the controller
      operationId: getAllTimeInterval
      parameters:
        - name: AssetID
          in: query
          description: AssetID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BaselineModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getAssetConfig:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return asset config
      # used as the method name of the controller
      operationId: getAssetConfig
      parameters:
        - name: AssetID
          in: query
          description: AssetID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BaselineModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/updateAssetConfig:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: Return asset config
      # used as the method name of the controller
      operationId: updateAssetConfig
      parameters:
      - in: body
        name: AssetObject
        description: Asset config object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/AssetConfigModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AssetConfigModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
  /asset/setBaselineActive:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: set baseline active
      # used as the method name of the controller
      operationId: setBaselineActive
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/BaselineModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/setTimerIntervalActiveForTag:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: set baseline active
      # used as the method name of the controller
      operationId: setTimerIntervalActiveForTag
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/BaselineModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/getConfigByAssetID:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return Asset Configuration
      # used as the method name of the controller
      operationId: getConfigByAssetID
      parameters:
        - name: AssetID
          in: query
          description: AssetID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AssetModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"       
  /asset/getAllConfigByUserID:
    # binds a127 app logic to a route
    x-swagger-router-controller: assetManage
    get:
      tags:
      - asset
      description: Return Asset Configuration
      # used as the method name of the controller
      operationId: getAllConfigByUserID
      parameters:
        - name: UserID
          in: query
          description: UserID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AssetModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /asset/createAsset:
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: Create a new asset and add it to User list
      # used as the method name of the controller
      operationId: createAsset
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/AssetModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/createAssetByConfig:
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: Create a new asset and add it to User list
      # used as the method name of the controller
      operationId: createAssetByConfig
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/AssetModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/createAssetByConfigFile:
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: Create a new asset by configuration file
      # used as the method name of the controller
      operationId: createAssetByConfigFile
      consumes:
      - multipart/form-data
      parameters:
      - name: UserID
        in: formData
        description: UserID
        required: true
        type: string
      - in: formData
        name: configFile
        type: file
        description: The file to upload
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
  /asset/createAllEquationWithInterval:
    x-swagger-router-controller: assetManage
    post:
      tags:
      - asset
      description: create equations by config with intervals
      # used as the method name of the controller
      operationId: createAllEquationWithInterval
      parameters:
      - in: body
        name: AssetObject
        description: Asset object thats needs to be added into table
        required: true
        schema:
          $ref: '#/definitions/AssetModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
  /asset/updateAsset:
    x-swagger-router-controller: assetManage
    put:
      tags:
      - asset
      summary: update an existing Asset
      description: update an existing Asset
      # used as the method name of the controller
      operationId: updateAsset
      parameters:
      - in: body
        name: body
        description: Asset object thats needs to be updated
        required: true
        schema:
          $ref: '#/definitions/AssetModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/deleteAsset:
    x-swagger-router-controller: assetManage
    delete:
      tags:
      - asset
      description: delete an existing Asset
      # used as the method name of the controller
      operationId: deleteAsset
      parameters:
      - name: AssetID
        in: query
        required: true
        type: string
      - name: UserID
        in: query
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/login:
    x-swagger-router-controller: userManage
    post:
      tags:
      - user
      security: []
      summary: log in
      description: logIn user
      # used as the method name of the controller
      operationId: logIn
      parameters:
      - in: body
        name: body
        description: User object thats need to be added
        required: true
        schema:
          $ref: '#/definitions/LogInModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/resetUser:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: resetUser in
      description: resetUser user
      # used as the method name of the controller
      operationId: resetUser
      parameters:
      - name: EmailAddress
        in: query
        description: EmailAddress to reset
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/validateResetPasswordLink:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: resetUser in
      description: resetUser user
      # used as the method name of the controller
      operationId: validateResetPasswordLink
      parameters:
      - name: EmailAddress
        in: query
        description: EmailAddress to reset
        required: true
        type: string
      - name: VerificationCode
        in: query
        description: VerificationCode to reset
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/updatePassword:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: updatePassword in
      description: updatePassword user
      # used as the method name of the controller
      operationId: updatePassword
      parameters:
      - name: EmailAddress
        in: query
        description: EmailAddress to reset
        required: true
        type: string
      - name: Password
        in: query
        description: VerificationCode to reset
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/createUser:
    x-swagger-router-controller: userManage
    post:
      tags:
      - user
      security: []
      summary: create a new user
      description: create a new user
      # used as the method name of the controller
      operationId: createUser
      parameters:
      - in: body
        name: body
        description: User object thats need to be added
        required: true
        schema:
          $ref: '#/definitions/UserModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/updateUser:
    x-swagger-router-controller: userManage
    put:
      tags:
      - user
      summary: update a user
      description: update a user
      # used as the method name of the controller
      operationId: updateUser
      parameters:
      - in: body
        name: body
        description: User object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/UserModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/deleteUser:
    x-swagger-router-controller: userManage
    delete:
      tags:
      - user
      summary: delete a user
      description: delete a user
      # used as the method name of the controller
      operationId: deleteUser
      parameters:
      - name: userID
        in: query
        description: User object thats need to be deleted
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/getSettings:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      summary: get all user settings
      description: get all user gettings
      # used as the method name of the controller
      operationId: getSettings
      parameters:
      - name: userID
        in: query
        description: get all user settings
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserSettings"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/updateSettings:
    x-swagger-router-controller: userManage
    post:
      tags:
      - user
      summary: update all user settings
      description: update all user gettings
      # used as the method name of the controller
      operationId: updateSettings
      parameters:
      - in: body
        name: body
        description: User object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/UserModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/activate:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      security: []
      summary: activate user
      description: activate user
      # used as the method name of the controller
      operationId: activate
      parameters:
      - name: UserID
        in: query
        description: User ID
        required: true
        type: string
      - name: ActivateKey
        in: query
        description: ActivateKey
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/getUserIDbyApiKey:
    x-swagger-router-controller: userManage
    get:
      tags:
      - user
      description: get the UserID using the Api-Key
      operationId: getUserbyApiKey
      parameters:
      - name: ApiKey
        description: bf
        required: true
        in: query
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/getDeviceByAsset:
    x-swagger-router-controller: deviceManage
    get:
      tags:
      - device
      description: get all device by AssetID
      # used as the method name of the controller
      operationId: getDeviceByAsset
      parameters:
      - name: AssetID
        in: query
        description: AssetID in which the device is
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/DeviceModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/getSingleDevice:
    # binds a127 app logic to a route
    x-swagger-router-controller: deviceManage
    get:
      tags:
      - device
      description: Return list of device's attributes for a given DeviceID
      # used as the method name of the controller
      operationId: getSingleDevice
      parameters:
        - name: DeviceID
          in: query
          description: DeviceID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DeviceModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/getDeviceBySerialNumber:
    # binds a127 app logic to a route
    x-swagger-router-controller: deviceManage
    get:
      tags:
      - device
      description: Return list of device's attributes for a given SerialNumber
      # used as the method name of the controller
      operationId: getDeviceBySerialNumber
      parameters:
        - name: SerialNumber
          in: query
          description: SerialNumber
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DeviceModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/getGatewaySetting:
    # binds a127 app logic to a route
    x-swagger-router-controller: deviceManage
    get:
      tags:
      - device
      description: Return gateway setting json file
      # used as the method name of the controller
      operationId: getGatewaySetting
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DeviceModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/updateGatewaySetting:
    # binds a127 app logic to a route
    x-swagger-router-controller: deviceManage
    post:
      tags:
      - device
      description: update gateway setting json file
      # used as the method name of the controller
      operationId: updateGatewaySetting
      parameters:
      - in: body
        name: body
        description: Gateway setting file
        required: true
        schema:
          $ref: '#/definitions/GatewaySetting'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DeviceModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/createDevice:
    x-swagger-router-controller: deviceManage
    post:
      tags:
      - device
      description: create a new device
      # used as the method name of the controller
      operationId: createDevice
      parameters:
      - in: body
        name: body
        description: Device object thats need to be created
        required: true
        schema:
          $ref: '#/definitions/DeviceModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/updateDevice:
    x-swagger-router-controller: deviceManage
    put:
      tags:
      - device
      summary: update a Device
      description: update a Device
      # used as the method name of the controller
      operationId: updateDevice
      parameters:
      - in: body
        name: body
        description: User object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateDeviceModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /device/deleteDevice:
    x-swagger-router-controller: deviceManage
    delete:
      tags:
      - device
      summary: delete a Device
      description: Delete a Device, remove Device from User and Asset and delete all Parameters that are in it. Need ApiKey to succeed
      # used as the method name of the controller
      operationId: deleteDevice
      parameters:
      - name: DeviceID
        in: query
        description: DeviceID to be deleted
        required: true
        type: string
      - name: AssetID
        in: query
        description: device's AssetID
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /dashboard/getDashboardByAsset:
    x-swagger-router-controller: dashboardManage
    get:
      tags:
      - dashboard
      description: get all dashboard by AssetID
      # used as the method name of the controller
      operationId: getDashboardByAsset
      parameters:
      - name: AssetID
        in: query
        description: AssetID in which the dashboard is
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/DashboardModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /dashboard/getSingleDashboard:
    # binds a127 app logic to a route
    x-swagger-router-controller: dashboardManage
    get:
      tags:
      - dashboard
      description: Return list of device's attributes for a given DashboardID
      # used as the method name of the controller
      operationId: getSingleDashboard
      parameters:
        - name: DashboardID
          in: query
          description: DashboardID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DashboardModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /dashboard/createDashboard:
    x-swagger-router-controller: dashboardManage
    post:
      tags:
      - dashboard
      description: create a new dashboard
      # used as the method name of the controller
      operationId: createDashboard
      parameters:
      - in: body
        name: body
        description: dashboard object thats need to be created
        required: true
        schema:
          $ref: '#/definitions/DashboardModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /dashboard/updateDashboard:
    x-swagger-router-controller: dashboardManage
    put:
      tags:
      - dashboard
      summary: update a dashboard
      description: update a dashboard
      # used as the method name of the controller
      operationId: updateDashboard
      parameters:
      - in: body
        name: body
        description: dashboard object thats need to be updated
        required: true
        schema:
          $ref: '#/definitions/DashboardModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /dashboard/deleteDashboard:
    x-swagger-router-controller: dashboardManage
    delete:
      tags:
      - device
      summary: delete a Device
      description: Delete a Device, remove Device from User and Asset and delete all Parameters that are in it. Need ApiKey to succeed
      # used as the method name of the controller
      operationId: deleteDashboard
      parameters:
      - name: DashboardID
        in: query
        description: DashboardID to be deleted
        required: true
        type: string
      - name: AssetID
        in: query
        description: AssetID of the Dashboard
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/getParameterByDevice:
    x-swagger-router-controller: parameterManage
    get:
      tags:
      - parameter
      summary: get all parameter
      description: get all parameter by DeviceID
      # used as the method name of the controller
      operationId: getParameterbyDevice
      parameters:
      - name: DeviceID
        in: query
        description: DeviceID of the parameter
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/ParameterModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/getParameterByTag:
    x-swagger-router-controller: parameterManage
    get:
      tags:
      - parameter
      summary: get all parameter
      description: get all parameter by tag
      # used as the method name of the controller
      operationId: getParameterByTag
      parameters:
      - name: ParameterTag
        in: query
        description: ParameterTag
        required: true
        type: string
      - name: AssetID
        in: query
        description: AssetID
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/ParameterModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/getAllParameterByAsset:
    x-swagger-router-controller: parameterManage
    get:
      tags:
      - parameter
      description: get all parameters in an Asset
      operationId: getAllParameterByAsset
      parameters:
      - name: AssetID
        in: query
        type: string
        required: true
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/ParameterModel"
              Count:
                type: integer
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
  /parameter/getParameterByAsset:
    x-swagger-router-controller: parameterManage
    get:
      tags:
      - parameter
      description: get all parameters in an Asset
      operationId: getParameterByAsset
      parameters:
      - name: AssetID
        in: query
        type: string
        required: true
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/ParameterModel"
              Count:
                type: integer
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/getSingleParameter:
    # binds a127 app logic to a route
    x-swagger-router-controller: parameterManage
    get:
      tags:
      - parameter
      summary: Retrieve list of attributes
      description: Return list of parameter's attributes for a given ParameterID
      # used as the method name of the controller
      operationId: getSingleParameter
      parameters:
        - name: ParameterID
          in: query
          description: ParameterID
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/ParameterModel"
        # responses may fall through to errors
        400:
          description: Invalid Input
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Item not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/createParameter:
    x-swagger-router-controller: parameterManage
    post:
      tags:
      - parameter
      description: create a new parameter and add it to a device
      # used as the method name of the controller
      operationId: createParameter
      parameters:
      - in: body
        name: body
        description: Parameter object thats needs to be added
        required: true
        schema:
          $ref: '#/definitions/CreateParameterModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/updateParameter:
    x-swagger-router-controller: parameterManage
    put:
      tags:
      - parameter
      summary: update a Parameter
      description: update a Parameter
      # used as the method name of the controller
      operationId: updateParameter
      parameters:
      - in: body
        name: body
        description: Parameter object thats needs to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateParameterModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/updateRequireList:
    x-swagger-router-controller: parameterManage
    put:
      tags:
      - parameter
      summary: update a Parameter
      description: update a Parameter
      # used as the method name of the controller
      operationId: updateRequireList
      parameters:
      - in: body
        name: body
        description: Parameter object thats needs to be updated
        required: true
        schema:
          $ref: '#/definitions/AddToRequireListModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/updateRequireListByEquation:
    x-swagger-router-controller: parameterManage
    put:
      tags:
      - parameter
      summary: update a Parameter
      description: update a Parameter
      # used as the method name of the controller
      operationId: updateRequireListByEquation
      parameters:
      - in: body
        name: body
        description: Parameter object thats needs to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateRequireListByEquationModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /parameter/deleteParameter:
    x-swagger-router-controller: parameterManage
    delete:
      tags:
      - parameter
      summary: delete a Parameter
      description: delete a Parameter
      # used as the method name of the controller
      operationId: deleteParameter
      parameters:
      - name: ParameterID
        in: query
        description: ParameterID to be deleted
        required: true
        type: string
      - name: DeviceID
        in: query
        description: Parameter's DeviceID
        required: false
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getDataByAssetID:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  get a single data by parameter id and timestamp
      # used as the method name of the controller
      operationId: getDataByAssetID
      parameters:
      - name: AssetID
        in: query
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      - name: GroupInterval
        in: query
        required: false
        type: integer
        description: (optional) Time Interval for grouping, in seconds
      - name: GroupMethod
        in: query
        required: false
        type: integer
        description: (optional) Group method, 0=average, 1=max, 2=min, 3=count, 4=first, 5=last
      - name: StartTruncate
        in: query
        required: false
        type: integer
        description: (optional) Make Start Time Stamp start at 0 second or not
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getCalculatedDataForBaseline:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  get data for baseline selection
      # used as the method name of the controller
      operationId: getCalculatedDataForBaseline
      parameters:
      - name: AssetID
        in: query
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getDataForBaselineSelection:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  get data for baseline selection
      # used as the method name of the controller
      operationId: getDataForBaselineSelection
      parameters:
      - name: AssetID
        in: query
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getDataByParameterID:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  get a single data by parameter id and timestamp
      # used as the method name of the controller
      operationId: getDataByParameterID
      parameters:
      - name: ParameterID
        in: query
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/DataModel"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getDataBySerialNumber:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  get multiple data by parameterID and timestamp
      # used as the method name of the controller
      operationId: getDataBySerialNumber
      parameters:
      - name: SerialNumber
        in: query
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/DataModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/getDataByTag:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  get multiple data by tag
      # used as the method name of the controller
      operationId: getDataByTag
      parameters:
      - name: AssetID
        in: query
        required: true
        type: string
      - name: Tag
        in: query
        required: true
        type: string
      - name: StartTimeStamp
        in: query
        required: true
        type: integer
      - name: EndTimeStamp
        in: query
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              Items:
                type: array
                items:
                  $ref: "#/definitions/DataModel"
              Count:
                type: integer
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/addDataByParameterID:
    x-swagger-router-controller: dataManage
    post:
      tags:
      - data
      description: push data to Data table using VarID and timestamp
      # used as the method name of the controller
      operationId: addDataByParameterID
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AddDataModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/addDataByDeviceID:
    x-swagger-router-controller: dataManage
    post:
      tags:
      - data
      description:  Add Data by device id and timestamp. Have to be tested with Postman and replace ParameterName in JSON by actual ParameterName
      # used as the method name of the controller
      operationId: addDataByDeviceID
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AddDataByDeviceIDModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/testFunc:
    x-swagger-router-controller: dataManage
    get:
      tags:
      - data
      description:  Add Data by device's name, ApiKey, and timestamp. Have to be tested with Postman and replace ParameterName in JSON by actual ParameterName. ApiKey of user is needed in header of request
      # used as the method name of the controller
      operationId: testFunc
      parameters:
      - name: AssetID
        in: query
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/addDataBySerialNumber:
    x-swagger-router-controller: dataManage
    post:
      tags:
      - data
      description:  Add Data by serial number of the device and timestamp. Have to be tested with Postman and replace ParameterName in JSON by actual ParameterName.ApiKey of user is needed in header of request
      # used as the method name of the controller
      operationId: addDataBySerialNumber
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AddDataBySerialNumberModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /data/addDataByParticleEvent:
    x-swagger-router-controller: dataManage
    post:
      tags:
      - data
      description:  Add Data by serial number of the device and timestamp. Have to be tested with Postman and replace ParameterName in JSON by actual ParameterName.ApiKey of user is needed in header of request
      # used as the method name of the controller
      operationId: addDataByParticleEvent
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AddDataBySerialNumberModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /deploy/productionUpdate:
    x-swagger-router-controller: deployManage
    post:
      tags:
      - deploy
      description:  deploy trigger by github webhooks 
      # used as the method name of the controller
      operationId: productionUpdate
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AddDataBySerialNumberModel'
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions

definitions:
  AssetModel:
    type: object
    properties:
      UserID:
        type: string
      AssetID:
        type: string
      AddTimeStamp:
        type: integer
      DisplayName:
        type: string
      LatestTimeStamp:
        type: integer
  AssetConfigModel:
    type: object
    properties:
      AssetID:
        type: string
      Config:
        type: object
  BaselineModel:
    type: object
    properties:
      AssetID:
        type: string
      TimeInterval:
        type: integer
      Active:
        type: integer
  LogInModel:
    type: object
    properties:
      EmailAddress:
        type: string
      Password:
        type: string
  UserModel:
    type: object
    properties:
      UserID:
        type: string
      Active:
        type: number
      EmailAddress:
        type: string
      Password:
        type: string
  DataModel:
    type: object
    properties:
      ParameterID:
        type: string
      EpochTimeStamp:
        type: integer
      Data:
        type: number
  DeviceModel:
    type: object
    properties:
      AssetID:
        type: string
      DeviceID:
        type: string
      DisplayName:
        type: string
      AddTimeStamp:
        type: integer
      SerialNumber:
        type: string
      VerificationCode:
        type: string
  DashboardModel:
    type: object
    properties:
      AssetID:
        type: string
      DashboardID:
        type: string
      DisplayName:
        type: string
      AddTimeStamp:
        type: integer
  CoreModuleSetting:
    type: object
    properties:
      MacAddress:
        type: string
      BLEName:
        type: string
      Devices:
        type: array
        items:
          type: string
      Interval:
        type: integer
  GatewaySetting:
    type: object
    properties:
      LocalEndPoint:
        type: string
      CloudEndPoint:
        type: string
      CoreModules:
        type: array
        items:
          $ref: "#/definitions/CoreModuleSetting"
  UpdateDeviceModel:
    type: object
    properties:
      UserID:
        type: string
      DeviceID:
        type: string
      DisplayName:
        type: string
  AddDataModel:
    type: object
    properties:
      ParameterID:
        type: string
      Value:
        type: number
      TimeStamp:
        type: number
  AddDataBySerialNumberModel:
    type: object
    properties:
      SerialNumber:
        type: string
      Value:
        type: number
      DataType:
        type: string
      TimeStamp:
        type: number
  AddDataByDeviceIDModel:
    type: object
    properties:
      DeviceID:
        type: string
      Value:
        type: number
      DataType:
        type: string
      TimeStamp:
        type: number
  CreateParameterModel:
    type: object
    properties:
      AssetID:
        type: string
      DeviceID:
        type: string
      Unit:
        type: string
      DataType:
        type: string
      Equation:
        type: string
  ParameterModel:
    type: object
    properties:
      ParameterID:
        type: string
      CurrentValue:
        type: string
      DisplayName:
        type: string
      Tag:
        type: string
      Equation:
        type: string
      Unit:
        type: string
  AddToRequireListModel:
    type: object
    properties:
      ParameterID:
        type: string
      RequireList:
        type: array
        items:
          type: string
  UpdateRequireListByEquationModel:
    type: object
    properties:
      ParameterID:
        type: string
  UpdateParameterModel:
    type: object
    properties:
      DeviceID:
        type: string
      ParameterID:
        type: string
      CurrentValue:
        type: string
      ParameterName:
        type: string
      ParameterTag:
        type: string
      ParameterType:
        type: string
      ParameterUnit:
        type: string
      Equation:
        type: string
  UserSettings:
    type: object
    properties:
      SettingName:
        type: string
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
